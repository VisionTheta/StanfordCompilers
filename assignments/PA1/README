
README file for Programming Assignment 1
========================================

Your directory should now contain the following files:

 Makefile
 README
 atoi.cl -> [cool root]/assignments/PA1/atoi.cl
 stack.cl
 stack.test -> [cool root]/assignments/PA1/stack.test

	The Makefile contains targets for compiling and running your
	program, as well as handing it in.

	The README contains this info. Part of the assignment is to
	answer the questions at the end of this README file.
	Just edit this file.

	atoi.cl is an implementation in Cool of the string to integer
	conversion function known from the C language.

	stack.cl is the skeleton file which you should fill in with
	your program.

	stack.test is a short test input to the stack machine.


        The symlinked files (see "man ln") are that way to emphasize
        that they are read-only.


Instructions
------------

	To compile and run your program, type:

	% gmake test

        Try it now -- it should work, and print "Nothing implemented"
        (among a few other things).


        To simply compile your program, type

        % gmake compile


	Instructions for turning in the assignment will be posted on the
	course web page.

	GOOD LUCK!

---8<------8<------8<------8<---cut here---8<------8<------8<------8<---

Questions on PA1
----------------

1. Describe your implementation of the stack machine in a single short
   paragraph.

   1. I used a string to simulate the stack data structure and used an extra space to 
   segment each elements.
   2. I followed the handout and create a class called StackCommand to implement some basic stack method like push and pop. 
   3. I create some subclasses to implement some operations to support this stack machine.


2. List 3 things that you like about the Cool programming language.
   
   1. Easy
   2. Simple
   3. Objective design.
 
   

3. List 3 things you DON'T like about Cool.

   1. Too less comparison operators.
   2. Complicated expression form like "if <expr> then fi", "while <expr> loop pool".
   3. Indention settings.
   4. Don't have temporary variables but have to use let expression.
